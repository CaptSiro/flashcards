body {
    display: flex;
    flex-direction: column;
}

nav {
    display: flex;
    height: 64px;
    padding: 0 32px;
    justify-content: space-between;
    align-items: center;
    background-color: var(--container-1);
}

.breadcrumbs {
    display: flex;
    gap: 16px;
}



main {
    margin: 16px;
    overflow: auto;

    --grid-layout-gap: 16px;
    --grid-column-count: 10;
    --grid-item--min-width: 300px;

    --gap-count: calc(var(--grid-column-count) - 1);
    --total-gap-width: calc(var(--gap-count) * var(--grid-layout-gap));
    --grid-item--max-width: calc((100% - var(--total-gap-width)) / var(--grid-column-count));

    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(max(var(--grid-item--min-width), var(--grid-item--max-width)), 1fr));
    grid-auto-rows: 200px;
    grid-gap: var(--grid-layout-gap);
    place-items: center;
    padding-bottom: 64px;
}






main .deck {
    box-shadow: rgba(240, 46, 170, 0.4) 5px 5px,
        rgba(240, 46, 170, 0.3) 10px 10px,
        rgba(240, 46, 170, 0.2) 15px 15px,
        rgba(240, 46, 170, 0.1) 20px 20px,
        rgba(240, 46, 170, 0.05) 25px 25px;

    width: 200px;
    height: 150px;
    background-color: rgba(240, 46, 170);
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 16px;
    opacity: 0.8;

    transition: opacity 250ms linear;
}
main .deck:hover {
    opacity: 1;
    transition: opacity 0ms linear;
}



main .stack {
    width: 250px;
    height: 175px;
    border-radius: 8px;
    background-color: var(--container-4);
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 16px;
}



main .card {
    width: 300px;
    height: 200px;
    border-radius: 8px;
    background-color: var(--container-opposite-3);
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 16px;
}

main .deck :first-child,
main .stack :first-child,
main .card :first-child {
    margin-top: 50px;
}

main .deck:hover,
main .stack:hover {
    cursor: pointer;
}